Finding time complexity - Rule 1
To find out time complexity of an algorithm, we look at the number of operations performed based on the input size.

Let's take a look at the below code:

a = 1
b = 2
print(a + b)
In the above algorithm, there is no input. In total three operations are being performed in three lines. Every single operation is denoted as O(1) (pronounced as Big O of 1).

Thus, for the above example, we have time complexity as O(1) + O(1) + O(1) = 3 * O(1)

But we denote the time complexity of the above algorithm as O(1), ignoring the constant 3.

Rule 1 - Ignore the constants
When calculating time complexity, we ignore the constant values because they donâ€™t matter when the input size becomes large.

Thus O(1), 5 * O(1), 8 * O(1) are all O(1)

Task
What will be the time complexity of this algorithm?

a = 4
print(a)







// ANSWER

Correct Answer:

O(1)